{"version":3,"sources":["logo.svg","media/QNightclub.jpg","media/BlackPink_NWA.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","class","width","height","scrolling","frameborder","allow","src","href","target","icon","faSoundcloud","size","faEnvelope","faFacebook","faFacebookMessenger","breakpointCols","columnClassName","url","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b9b43e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/QNightclub.e0962a58.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BlackPink_NWA.32ffc124.jpg\";","import React from 'react';\nimport logo from './logo.svg';\nimport QNightclub from './media/QNightclub.jpg';\nimport BlackPink_NWA from './media/BlackPink_NWA.jpg';\nimport './App.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faInstagram, faFacebookMessenger, faSoundcloud } from '@fortawesome/free-brands-svg-icons';\nimport Masonry from 'react-masonry-css';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n\n      {/* <h1>FABRICATOR MUSIC</h1> */}\n\n\n      <header>\n        <div className=\"neon-pink\">\n          <h1>FABRICATOR</h1>\n          {/* <br /><br /><br /><br /><br /> */}\n\n          <div className=\"space\"></div>\n        </div>\n      </header>\n\n\n      <br />\n\n      <div class=\"neon-orange animated\">\n        <h1>TOP TRACKS</h1>\n      </div>\n\n      <br /><br /><br />\n\n\n      <iframe width=\"25%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/328639369&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\n\n      {/* \n      <iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/328639369&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"></iframe> */}\n\n      <iframe width=\"25%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/185420013&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\n\n      <iframe width=\"25%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/132749763&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\n\n      <br /><br /><br />\n\n      <a href=\"https://soundcloud.com/fabricatormusic\" target=\"_blank\">\n        <FontAwesomeIcon icon={faSoundcloud} size=\"4x\" />\n      </a>\n\n      <a href=\"mailto:FabricatorMusic@gmail.com\" target=\"_blank\">\n        <FontAwesomeIcon icon={faEnvelope} size=\"4x\" />\n      </a>\n\n      <a href=\"https://www.facebook.com/FabricatorMusic/\" target=\"_blank\">\n        <FontAwesomeIcon icon={faFacebook} size=\"4x\" />\n      </a>\n\n      <a href=\"https://messenger.com/brentlabasan\" target=\"_blank\">\n        <FontAwesomeIcon icon={faFacebookMessenger} size=\"4x\" />\n      </a>\n\n\n      {/* <FontAwesomeIcon icon={faFacebook} size=\"4x\" />\n      <FontAwesomeIcon icon={faInstagram} size=\"4x\" /> */}\n\n      <p>Fabricator is Brent Labasan. I was born and raised in Hawaii, and I now reside in Seattle, Washington. I like making music of all genres, and am open to collabaration!</p>\n\n      {/* <img src={QNightclub} className=\"\" alt=\"\" style={{ width: '640px' }} /> */}\n\n      <Masonry\n        breakpointCols={4}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {/* array of JSX items */}\n\n        {/* <div style={{width: '1920px'}} > */}\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/Bvc-ts_ldJD/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/B10yQSYAXfO/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/B3TU5u3AINJ/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/B4WJ2xcgIma/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/B3uQ4-qASF4/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n\n\n\n\n        < InstagramEmbed\n          url='https://www.instagram.com/p/BtXamQtFw0l/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n\n< InstagramEmbed\n          url='https://www.instagram.com/p/BryHEWkFsw8/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n< InstagramEmbed\n          url='https://www.instagram.com/p/BtbKQiwlL4Q/'\n          maxWidth={640}\n          hideCaption={true}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n        {/* </div> */}\n\n\n\n\n      </Masonry>\n\n\n\n\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}